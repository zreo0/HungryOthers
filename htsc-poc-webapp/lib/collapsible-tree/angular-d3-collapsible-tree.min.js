"use strict";function collapsibleTree(){return{restrict:"E",scope:{width:"=",height:"=",radius:"=",nodes:"="},link:function(a){function b(a){var e=d3.event&&d3.event.altKey?5e3:500,f=i.nodes(d).reverse();f.forEach(function(a){a.y=180*a.depth});var g=k.selectAll("g.node").data(f,function(a){return a.id||(a.id=++h)}),l=g.enter().append("svg:g").attr("class","node").attr("transform",function(){return"translate("+a.y0+","+a.x0+")"}).on("click",function(a){c(a),b(a)});l.append("svg:circle").attr("r",1e-6).style("fill",function(a){return a._children?"lightsteelblue":"#fff"}),l.append("svg:text").attr("x",function(a){return a.children||a._children?-10:10}).attr("dy",".35em").attr("text-anchor",function(a){return a.children||a._children?"end":"start"}).text(function(a){return a.name}).style("fill-opacity",1e-6);var m=g.transition().duration(e).attr("transform",function(a){return"translate("+a.y+","+a.x+")"});m.select("circle").attr("r",4.5).style("fill",function(a){return a._children?"lightsteelblue":"#fff"}),m.select("text").style("fill-opacity",1);var n=g.exit().transition().duration(e).attr("transform",function(){return"translate("+a.y+","+a.x+")"}).remove();n.select("circle").attr("r",1e-6),n.select("text").style("fill-opacity",1e-6);var o=k.selectAll("path.link").data(i.links(f),function(a){return a.target.id});o.enter().insert("svg:path","g").attr("class","link").attr("d",function(){var b={x:a.x0,y:a.y0};return j({source:b,target:b})}).transition().duration(e).attr("d",j),o.transition().duration(e).attr("d",j),o.exit().transition().duration(e).attr("d",function(){var b={x:a.x,y:a.y};return j({source:b,target:b})}).remove(),f.forEach(function(a){a.x0=a.x,a.y0=a.y})}function c(a){a.children?(a._children=a.children,a.children=null):(a.children=a._children,a._children=null)}var d,e=[20,120,20,120],f=1280-e[1]-e[3],g=800-e[0]-e[2],h=0,i=d3.layout.tree().size([g,f]),j=d3.svg.diagonal().projection(function(a){return[a.y,a.x]}),k=d3.select("collapsible-tree").append("svg:svg").attr("width",f+e[1]+e[3]).attr("height",g+e[0]+e[2]).append("svg:g").attr("transform","translate("+e[3]+","+e[0]+")");a.$watch("nodes",function(){function e(a){a.children&&(a.children.forEach(e),c(a))}a.nodes&&(d=angular.copy(a.nodes),d.x0=g/2,d.y0=0,d.children.forEach(e),c(d.children[1]),c(d.children[1].children[2]),c(d.children[9]),c(d.children[9].children[0]),b(d))},!0)}}}var app=angular.module("renderteam.collapsibleTree",[]);app.directive("collapsibleTree",collapsibleTree),collapsibleTree.$inject=[];